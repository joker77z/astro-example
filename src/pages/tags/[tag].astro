---
import type { GetStaticPaths } from 'astro';
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Frontmatter {
  title: string;
}

interface Post {
  title: string;
  url: string;
  frontmatter: Frontmatter;
}

export const getStaticPaths: GetStaticPaths = (async () => {
  // astro api인 glob을 이용해 .md파일들을 불러온다.
  const allPosts = await Astro.glob('../posts/*.md');

  // 불러온 post들을 순회하면서 tag들을 배열로 만든다.
  /**
   * 1. allPosts.map(post => post.frontmatter.tags).flat() => ['tags', 'frontmatter'];
   * 2. new Set(['tags', 'frontmatter']) => Set(2) {'tags', 'frontmatter'};
   * 3. [...new Set(...)] => ['tags', 'frontmatter'];
   */
  const uniqueTags = [...new Set(allPosts.map(post => post.frontmatter.tags).flat())];

  return uniqueTags.map(tag => {
    const filteredPosts = allPosts.filter(post => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}) satisfies GetStaticPaths;

const { tag } = Astro.params;

interface Props {
  posts: Post[];
}
const { posts } = Astro.props as Props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map(post => <BlogPost url={post.url} title={post.frontmatter.title} />)}
  </ul>
</BaseLayout>
